<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.lingnan.exam.dao.TopicDao">

    <resultMap type="cn.edu.lingnan.exam.entity.Topic" id="TopicMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="topicContent" column="topic_content" jdbcType="VARCHAR"/>
        <result property="referAnswer" column="refer_answer" jdbcType="VARCHAR"/>
        <result property="topicTime" column="topic_time" jdbcType="TIMESTAMP"/>
        <result property="userOp" column="user_op" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TopicMap">
        select
          id,  topic_content, refer_answer, topic_time, user_op
        from exam.topic
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TopicMap">
        select
          id,  topic_content, refer_answer, topic_time, user_op
        from exam.topic
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TopicMap">
        select
          id,  topic_content, refer_answer, topic_time, user_op
        from exam.topic
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test=" topicContent != null and  topicContent != ''">
                and  topic_content = #{ topicContent}
            </if>
            <if test="referAnswer != null and referAnswer != ''">
                and refer_answer = #{referAnswer}
            </if>
            <if test="topicTime != null">
                and topic_time = #{topicTime}
            </if>
            <if test="userOp != null and userOp != ''">
                and user_op = #{userOp}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into exam.topic( topic_content, refer_answer, topic_time, user_op)
        values (#{ topicContent}, #{referAnswer}, #{topicTime}, #{userOp})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update exam.topic
        <set>
            <if test=" topicContent != null and  topicContent != ''">
                 topic_content = #{ topicContent},
            </if>
            <if test="referAnswer != null and referAnswer != ''">
                refer_answer = #{referAnswer},
            </if>
            <if test="topicTime != null">
                topic_time = #{topicTime},
            </if>
            <if test="userOp != null and userOp != ''">
                user_op = #{userOp},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from exam.topic where id = #{id}
    </delete>

    <select id="selectAll" resultMap="TopicMap">
    select id, topic_content, refer_answer, topic_time, user_op
    from exam.topic
    </select>

    <select id="selectByKeyWord" resultMap="TopicMap">
        select id, topic_content, refer_answer, topic_time, user_op
        from exam.topic
        <where>
            <if test="_parameter !=null and _parameter !='' and _parameter !='undefined' ">
                id=#{keyword1}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey">
    delete from exam.topic
    where id = #{id}
    </delete>

    <update id="updateByPrimaryKey">
    update exam.topic
    set topic_content = #{topicContent},
      refer_answer = #{referAnswer},
      topic_time = #{topicTime},
      user_op = #{userOp}
    where id = #{id}
    </update>
    <select id="count" resultType="int">
      select count(*) from exam.topic
    </select>
      <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into exam.topic( topic_content, refer_answer, topic_time, user_op)
        values
        <foreach collection="list" separator="," item="item">
           (#{ item.topicContent}, #{item.referAnswer}, #{item.topicTime}, #{item.userOp})
        </foreach>
    </insert>
 <select id="findExamRadioQuestions" parameterType="int" resultType="java.util.HashMap">
   select t.id,t.topic_content,
        t.type, t.taotiid,
        t.optiona,t.optionb,
        t.optionc,t.optiond,
         t.refer_answer,l.label_name
        from  label l,topic t
        where
       t.taotiid=l.id
       and
       t.type='单选'
       and
       l.id=#{value}
  </select>
   <select id="findExamCheckboxQuestions" parameterType="int" resultType="java.util.HashMap">
   select t.id,t.topic_content,
        t.type, t.taotiid,
        t.optiona,t.optionb,
        t.optionc,t.optiond,
         t.refer_answer,l.label_name
        from  label l,topic t
        where
       t.taotiid=l.id
       and
       t.type='多选'
       and
       l.id=#{value}
  </select>
    <select id="findAnswerById" parameterType="String" resultMap="TopicMap">
     select
         t.id,t.taotiid,
        t.refer_answer,t.type,
        l.label_name
       from
       label l,topic t
         where
         t.id=#{value}
         and
         l.id=t.taotiid
</select>
</mapper>