<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.lingnan.exam.dao.LeacotDao">

    <resultMap type="cn.edu.lingnan.exam.entity.Leacot" id="LeacotMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="leacotsTime" column="leacots_time" jdbcType="TIMESTAMP"/>
        <result property="leacotsUser" column="leacots_user" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <!--关联映射-->
        <association property="replyId" javaType="cn.edu.lingnan.exam.entity.Reply">
            <id property="id" column="id"/>
            <result property="replyContent" column="reply_content"/>
            <result property="replyTime" column="reply_time"/>
            <result property="replyUser" column="reply_user"/>
        </association>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="LeacotMap">
        select
          id, content, leacots_time, leacots_user, reply_id, status
        from exam.leacot
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="LeacotMap">
        select
          id, content, leacots_time, leacots_user, reply_id, status
        from exam.leacot
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="LeacotMap">
        select
          id, content, leacots_time, leacots_user, reply_id, status
        from exam.leacot
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="leacotsTime != null">
                and leacots_time = #{leacotsTime}
            </if>
            <if test="leacotsUser != null and leacotsUser != ''">
                and leacots_user = #{leacotsUser}
            </if>
            <if test="replyId != null">
                and reply_id = #{replyId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into exam.leacot(content, leacots_time, leacots_user, reply_id, status)
        values (#{content}, #{leacotsTime}, #{leacotsUser}, #{replyId.id}, #{status})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update exam.leacot
        <set>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="leacotsTime != null">
                leacots_time = #{leacotsTime},
            </if>
            <if test="leacotsUser != null and leacotsUser != ''">
                leacots_user = #{leacotsUser},
            </if>
            <if test="replyId != null">
                reply_id = #{replyId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from exam.leacot where id = #{id}
    </delete>
    <select id="selectAll" resultMap="LeacotMap">
        SELECT
        le.id,
        le.content,
        le.leacots_time,
        le.leacots_user,
        re.id AS replyId,
        le.status,
        re.reply_content,
        re.reply_time,
        re.reply_user
    FROM
        leacot le
        JOIN reply re ON le.reply_id = re.id ORDER BY le.leacots_time DESC
  </select>

    <select id="selectByKeyWord" resultMap="LeacotMap" parameterType="String">
        SELECT
        le.id,
        le.content,
        le.leacots_time,
        le.leacots_user,
        re.id as replyId,
        le.status,
        re.reply_content,
        re.reply_time,
        re.reply_user
        FROM
        leacot le
        JOIN reply re ON le.reply_id = re.id
            <where>
            <if test="_parameter !=null and _parameter != '' and _parameter !='undefined' ">
                and le.leacots_user like concat('%',#{keyword1},'%')
            </if>
            </where>
    </select>

    <select id="count" resultType="int">
      select count(*) from reply
    </select>

    <select id="selectByPrimaryKey" resultMap="LeacotMap">
       SELECT
        le.id,
        le.content,
        le.leacots_time,
        le.leacots_user,
        re.id as replyId,
        le.status,
        re.reply_content,
        re.reply_time,
        re.reply_user
    FROM
        leacot le
        JOIN reply re ON le.reply_id = re.id
    where le.id = #{id}
  </select>
    <delete id="deleteByPrimaryKey">
    delete from leacot
    where id = #{id}
    </delete>

    <update id="updateByPrimaryKey">
    update leacot
    set content = #{content},
      leacots_time = #{leacotsTime},
      leacots_user = #{leacotsUser},
      reply_id = #{replyId.id},
      status =#{status}
    where id = #{id}
    </update>

</mapper>