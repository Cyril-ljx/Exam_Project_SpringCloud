<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.lingnan.exam.dao.UserDao">

    <resultMap type="cn.edu.lingnan.exam.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" jdbcType="VARCHAR"/>
        <result property="tocheck" column="tocheck" jdbcType="INTEGER"/>
    </resultMap>
    <select id="selectAll" resultMap="UserMap">
        select
          id, username, password, email, name, address, phone, user_type, tocheck
        from exam.user
    </select>

    <select id="count" resultType="long">
        select count(*) from user
    </select>


    <!--查询单个-->
    <select id="queryByUserName" resultMap="UserMap">
        select
          id, username, password, email, name, address, phone, user_type, tocheck
        from exam.user where username = #{username}
    </select>
    <!--查询单个-->
    <select id="selectByUsername" resultMap="UserMap">
        select
          id, username, password, email, name, address, phone, user_type, tocheck
        from exam.user where username = #{username}
    </select>


    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, username, password, email, name, address, phone, user_type, tocheck
        from exam.user
        where id = #{id}
    </select>


    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into exam.user(username, password, email, name, address, phone, user_type, tocheck)
        values (#{username}, #{password}, #{email}, #{name}, #{address}, #{phone}, #{userType}, #{tocheck})
    </insert>

    <!--通过主键修改数据-->
    <update id="updateByPrimaryKey">
        update exam.user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="userType != null and userType != ''">
                user_type = #{userType},
            </if>
            <if test="tocheck != null">
                tocheck = #{tocheck},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from exam.user where id in
        <foreach collection="ids" item="id" open="(" close=")"  separator=",">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteByPrimaryKey">
    delete from user
    where id = #{id}
    </delete>


    <select id="loginByUser" resultMap="UserMap" resultType="cn.edu.lingnan.exam.entity.User">
         select id, username, password, email, name, address, phone,tocheck,user_type
    from exam.user where username=#{username} AND password=#{password}
    </select>

</mapper>